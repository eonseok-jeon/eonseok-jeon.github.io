{"version":3,"file":"component---src-pages-posts-code-til-1-tsx-01a17a2ba4d33a0007bd.js","mappings":"sNAKA,MA2IaA,EAAOA,IAAMC,EAAAA,cAAA,aAAO,eAEjC,UA7IaC,IAETD,EAAAA,cAACE,EAAAA,EAAI,CACHC,UAAU,QACVC,IAAI,MACJC,KAAK,WACLC,SAAS,iBAETN,EAAAA,cAACO,EAAAA,EAAW,CAACC,IAAI,uCAAuCC,IAAI,WAC1DC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,OAAQC,eAAgB,UAAWC,iBAAkB,aAAcC,QAAA,oYACrGf,EAAAA,cAACgB,EAAAA,GAAgB,KACfhB,EAAAA,cAAA,UAAI,SACJA,EAAAA,cAAA,UAAI,kBACJA,EAAAA,cAAA,SAAG,yCAEHA,EAAAA,cAAA,UAAI,uBACJA,EAAAA,cAAA,SAAG,qCACHA,EAAAA,cAAA,SAAG,iBACHA,EAAAA,cAAA,SAAG,cACHA,EAAAA,cAAA,SAAG,kDACHA,EAAAA,cAAA,SAAG,iBAEHA,EAAAA,cAAA,UAAI,+BACJA,EAAAA,cAAA,SAAG,6BACHA,EAAAA,cAAA,SAAG,mCACHA,EAAAA,cAAA,WACEA,EAAAA,cAAA,2NAeFA,EAAAA,cAAA,UAAI,cACJA,EAAAA,cAAA,SAAG,kBACHA,EAAAA,cAAA,WACEA,EAAAA,cAAA,61BA8BFA,EAAAA,cAAA,WACEA,EAAAA,cAAA,ywCAgDFA,EAAAA,cAAA,UAAI,kBACJA,EAAAA,cAAA,SAAG,oBACHA,EAAAA,cAAA,SAAG,qBACHA,EAAAA,cAAA,SAAG,wBACHA,EAAAA,cAAA,SAAG,kBAEHA,EAAAA,cAAA,UAAI,oBACJA,EAAAA,cAAA,SAAG,cAEHA,EAAAA,cAAA,UAAI,iBACJA,EAAAA,cAAA,SAAG,Y,2GCvIX,MAAMiB,EAAcC,EAAAA,QAAOC,QAAOC,WAAA,CAAAC,YAAA,qBAAAC,YAAA,eAAdJ,CAAc,2QAuB5BK,EAAmBL,EAAAA,QAAOM,IAAGJ,WAAA,CAAAC,YAAA,0BAAAC,YAAA,eAAVJ,CAAU,yBAI7BO,GAAeP,EAAAA,EAAAA,SAAOF,EAAAA,IAAWI,WAAA,CAAAC,YAAA,sBAAAC,YAAA,eAAlBJ,CAAkB,qECKvC,MArBaQ,IAAkF,IAAjF,UAAEvB,EAAS,IAAEC,EAAG,KAAEC,EAAI,SAAEC,EAAQ,SAAEqB,GAAyCD,EACvF,MAAME,EAAgBC,EAAAA,SAASC,QAAQH,GAEvC,OACE3B,EAAAA,cAAC+B,EAAAA,EAAS,KACR/B,EAAAA,cAACgC,EAAAA,EAAO,CAACC,UAAU,IACnBjC,EAAAA,cAACkC,EAAa,KACZlC,EAAAA,cAAA,WACEA,EAAAA,cAACkC,EAAkB,KACjBlC,EAAAA,cAACgB,EAAAA,GAAW,KAAEb,GACdH,EAAAA,cAAA,SAAG,IAAEI,EAAI,MAAIC,IAEduB,EAAc,GACf5B,EAAAA,cAACkC,EAAc,KAAE5B,IAElBsB,EAAc,IAEP,C","sources":["webpack://eonseok-github-pages/./src/pages/posts/code/til/1.tsx","webpack://eonseok-github-pages/./src/templates/Post/style.ts","webpack://eonseok-github-pages/./src/templates/Post/index.tsx"],"sourcesContent":["import React from 'react';\nimport { StaticImage } from 'gatsby-plugin-image';\nimport Post from '@templates/Post';\nimport * as R from '@templates/ReusableCSS';\n\nconst Til1 = () => {\n  return (\n    <Post \n      mainTitle=\"초기 세팅\"\n      tag=\"TIL\"\n      date=\"23.08.11\"\n      subTitle=\"프로젝트 초기 세팅 하기\"\n    >\n      <StaticImage src=\"../../../../assets/imgs/review/1.png\" alt=\"post-img\" \n        style={{ width: '100%', height: '60vh', backgroundSize: 'contain', backgroundRepeat: 'no-repeat' }} />\n      <R.PostContentBox>\n        <h2>해야할 것</h2>\n        <h3>1. 불필요한 파일들 삭제</h3>\n        <p>모든 파일들 다 분석한 뒤, 현재 프로젝트에 필요 없는 파일들 삭제</p>\n\n        <h3>2. 불필요한 코드들 삭제 및 수정</h3>\n        <p>import 되어있는 css와 icon, 초기 코드 등 삭제</p>\n        <p>head 메타 정보 수정</p>\n        <p>favicon 수정</p>\n        <p>package.json name, description, author 등 정보 수정</p>\n        <p>(bulid 코드 추가)</p>\n\n        <h3>3. css 초기화 및 gloabal css 적용</h3>\n        <p>reset, global, variables…</p>\n        <p>scss 경우, preprocessorOptions 적용</p>\n        <pre>\n          <code>{`\ncss: {\n  preprocessorOptions: {\n    scss: {\n      additionalData: ₩\n          @use 'sass:math';\n          @import \"./src/renderer/src/styles/_global\";\n          ₩;\n    }\n  }\n}\n            `}\n          </code>\n        </pre>\n\n        <h3>4. path 설정</h3>\n        <p>path와 alias 설정</p>\n        <pre>\n          <code>{`\n{\n  \"extends\": \"@electron-toolkit/tsconfig/tsconfig.web.json\",\n  \"include\": [\n    \"src/renderer/src/env.d.ts\",\n    \"src/renderer/src/**/*\",\n    \"src/renderer/src/**/*.tsx\",\n    \"src/preload/*.d.ts\"\n  ],\n  \"compilerOptions\": {\n    \"composite\": true,\n    \"jsx\": \"react-jsx\",\n    \"baseUrl\": \".\",\n    \"paths\": {\n      \"renderer/*\": [\"src/renderer/src/*\"],\n      \"styles/*\": [\"src/renderer/src/styles/*\"],\n      \"@Types/*\": [\"src/renderer/src/@Types/*\"],\n      \"apis/*\": [\"src/renderer/src/apis/*\"],\n      \"assets/*\": [\"src/renderer/src/assets/*\"],\n      \"components/*\": [\"src/renderer/src/components/*\"],\n      \"layouts/*\": [\"src/renderer/src/layouts/*\"],\n      \"pages/*\": [\"src/renderer/src/pages/*\"],\n      \"routes/*\": [\"src/renderer/src/routes/*\"],\n      \"store/*\": [\"src/renderer/src/store/*\"]\n    }\n  }\n}\n          `}\n          </code>\n        </pre>\n        <pre>\n          <code>{`\nimport { resolve } from \"path\";\nimport { defineConfig, externalizeDepsPlugin } from \"electron-vite\";\nimport react from \"@vitejs/plugin-react\";\n\nexport default defineConfig({\n  main: {\n    plugins: [externalizeDepsPlugin()],\n  },\n  preload: {\n    plugins: [externalizeDepsPlugin()],\n  },\n  renderer: {\n    resolve: {\n      alias: {\n        renderer: resolve(\"src/renderer/src\"),\n        assets: resolve(\"src/renderer/src/assets\"),\n        components: resolve(\"src/renderer/src/components\"),\n        styles: resolve(\"src/renderer/src/styles\"),\n        contexts: resolve(\"src/renderer/src/contexts\"),\n        hooks: resolve(\"src/renderer/src/hooks\"),\n        layouts: resolve(\"src/renderer/src/layouts\"),\n        pages: resolve(\"src/renderer/src/pages\"),\n        routes: resolve(\"src/renderer/src/routes\"),\n        store: resolve(\"src/renderer/src/store\"),\n        utils: resolve(\"src/renderer/src/utils\"),\n      },\n    },\n    plugins: [react()],\n    define: {\n      \"process.env\": process.env,\n    },\n    css: {\n      preprocessorOptions: {\n        scss: {\n          additionalData: ₩\n          @use 'sass:math';\n          @import \"./src/renderer/src/styles/_global\";\n          ₩,\n        },\n      },\n    },\n  },\n});\n          `}\n          </code>\n        </pre>\n        \n        <h3>5. 코드 공통 규칙 설정</h3>\n        <p>.editorconfig 설정</p>\n        <p>.eslintrc.json 설정</p>\n        <p>.stylelintrc.json 설정</p>\n        <p>.prettierrc 설정</p>\n\n        <h3>6. .gitignore 설정</h3>\n        <p>.gitignore</p>\n\n        <h3>7. 별 오류 없길 빌기</h3>\n        <p>제발,, 🙏</p>\n      </R.PostContentBox>\n    </Post>\n  );\n};\n\nexport const Head = () => <title>til - 초기 세팅</title>;\n\nexport default Til1;","import styled from 'styled-components';\nimport * as R from '../ReusableCSS';\n\nconst PostArticle = styled.article`\n  max-width: 120rem;\n  margin: 8rem auto 0;\n  padding: 7%;\n\n  pre {\n    display: inline-block;\n    width: 100%;\n    overflow: auto;\n    margin: 2rem 0;\n    padding: 0.1rem 2rem;\n    border-radius: 1rem;\n    font-size: 1.2rem;\n    color: #fff;\n    background-color: #222;\n    border: 0.1rem solid #666;\n\n    &::-webkit-scrollbar {\n      display: none; /* Chrome, Safari, Opera*/\n    }\n  }\n`;\n\nconst PostMainTitleBox = styled.div`\n  margin-bottom: 2rem;\n`;\n\nconst PostSubTitle = styled(R.SubTitle)`\n  padding: 2rem 0;\n  font-weight: 500;\n  border-bottom: 0.1rem solid #ddd;\n`;\n\nexport { PostArticle, PostMainTitleBox, PostSubTitle };\n","import React, { Children, PropsWithChildren } from 'react';\nimport GlobalCSS from '@layouts/GlobalCSS';\nimport MainNav from '@layouts/MainNav';\nimport * as S from './style';\nimport * as R from '../ReusableCSS';\n\ninterface IPostProps { \n  mainTitle: string;\n  tag: string;\n  date: string;\n  subTitle: string;\n}\n\n/** Post 상세 페이지 template */\nconst Post = ({ mainTitle, tag, date, subTitle, children }: PropsWithChildren<IPostProps>) => {\n  const childrenArray = Children.toArray(children);\n\n  return (\n    <GlobalCSS>\n      <MainNav isSticky={true} />\n      <S.PostArticle>\n        <div>\n          <S.PostMainTitleBox>\n            <R.MainTitle>{mainTitle}</R.MainTitle>\n            <p>@{tag} / {date}</p>\n          </S.PostMainTitleBox>\n          {childrenArray[0]}\n          <S.PostSubTitle>{subTitle}</S.PostSubTitle>\n        </div>\n        {childrenArray[1]}\n      </S.PostArticle>\n    </GlobalCSS>\n  );\n};\n\nexport default Post;"],"names":["Head","React","Til1","Post","mainTitle","tag","date","subTitle","StaticImage","src","alt","style","width","height","backgroundSize","backgroundRepeat","__error","R","PostArticle","styled","article","withConfig","displayName","componentId","PostMainTitleBox","div","PostSubTitle","_ref","children","childrenArray","Children","toArray","GlobalCSS","MainNav","isSticky","S"],"sourceRoot":""}