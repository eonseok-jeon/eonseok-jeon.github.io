{"version":3,"file":"component---src-pages-posts-daily-plan-1-tsx-066ec0c8a4125865abb6.js","mappings":"sNAKA,MA8DaA,EAAOA,IAAMC,EAAAA,cAAA,aAAO,gBAEjC,UAhEcC,IAEVD,EAAAA,cAACE,EAAAA,EAAI,CACHC,UAAU,QACVC,IAAI,OACJC,KAAK,WACLC,SAAS,UAETN,EAAAA,cAACO,EAAAA,EAAW,CAACC,IAAI,sCAAsCC,IAAI,WACzDC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,OAAQC,eAAgB,UAAWC,iBAAkB,aAAcC,QAAA,qYACrGf,EAAAA,cAACgB,EAAAA,GAAgB,KACfhB,EAAAA,cAAA,UAAI,cACJA,EAAAA,cAAA,SAAG,kDACHA,EAAAA,cAAA,SAAG,gBACHA,EAAAA,cAAA,SAAG,mCACHA,EAAAA,cAAA,SAAG,gCAEHA,EAAAA,cAAA,UAAI,MACJA,EAAAA,cAAA,UAAI,uBACJA,EAAAA,cAAA,SAAG,uCACHA,EAAAA,cAAA,SAAG,uBACHA,EAAAA,cAAA,SAAG,mDAEHA,EAAAA,cAAA,UAAI,UACJA,EAAAA,cAAA,SAAG,sBAEHA,EAAAA,cAAA,UAAI,YACJA,EAAAA,cAAA,SAAG,cACHA,EAAAA,cAAA,SAAG,sBACHA,EAAAA,cAAA,SAAG,eACHA,EAAAA,cAAA,SAAG,mBAEHA,EAAAA,cAAA,UAAI,WACJA,EAAAA,cAAA,SAAG,cAEHA,EAAAA,cAAA,UAAI,oBAEJA,EAAAA,cAAA,UAAI,eACJA,EAAAA,cAAA,SAAG,UAEHA,EAAAA,cAAA,UAAI,YACJA,EAAAA,cAAA,SAAG,2CACHA,EAAAA,cAAA,SAAG,eAEHA,EAAAA,cAAA,UAAI,qBACJA,EAAAA,cAACgB,EAAAA,GAAY,KACXhB,EAAAA,cAACO,EAAAA,EAAW,CAACC,IAAI,uCAAuCC,IAAI,sBAAqBQ,YAAAC,EAAA,QACjFlB,EAAAA,cAAA,SAAG,iBAELA,EAAAA,cAAA,SAAG,qBACHA,EAAAA,cAAA,SAAG,0BAEHA,EAAAA,cAAA,UAAI,UACJA,EAAAA,cAAA,SAAG,SAEHA,EAAAA,cAAA,UAAI,UACJA,EAAAA,cAAA,SAAG,e,2GC1DX,MAAMmB,EAAcC,EAAAA,QAAOC,QAAOC,WAAA,CAAAC,YAAA,qBAAAC,YAAA,eAAdJ,CAAc,8QAsB5BK,EAAmBL,EAAAA,QAAOM,IAAGJ,WAAA,CAAAC,YAAA,0BAAAC,YAAA,eAAVJ,CAAU,yBAI7BO,GAAeP,EAAAA,EAAAA,SAAOJ,EAAAA,IAAWM,WAAA,CAAAC,YAAA,sBAAAC,YAAA,eAAlBJ,CAAkB,oECMvC,MArBaQ,IAAkF,IAAjF,UAAEzB,EAAS,IAAEC,EAAG,KAAEC,EAAI,SAAEC,EAAQ,SAAEuB,GAAyCD,EACvF,MAAME,EAAgBC,EAAAA,SAASC,QAAQH,GAEvC,OACE7B,EAAAA,cAACiC,EAAAA,EAAS,KACRjC,EAAAA,cAACkC,EAAAA,EAAO,CAACC,UAAU,IACnBnC,EAAAA,cAACoC,EAAa,KACZpC,EAAAA,cAAA,WACEA,EAAAA,cAACoC,EAAkB,KACjBpC,EAAAA,cAACgB,EAAAA,GAAW,KAAEb,GACdH,EAAAA,cAAA,SAAG,IAAEI,EAAI,MAAIC,IAEdyB,EAAc,GACf9B,EAAAA,cAACoC,EAAc,KAAE9B,IAElBwB,EAAc,IAEP,C","sources":["webpack://eonseok-github-pages/./src/pages/posts/daily/plan/1.tsx","webpack://eonseok-github-pages/./src/templates/Post/style.ts","webpack://eonseok-github-pages/./src/templates/Post/index.tsx"],"sourcesContent":["import React from 'react';\nimport { StaticImage } from 'gatsby-plugin-image';\nimport Post from '@templates/Post';\nimport * as R from '@templates/ReusableCSS';\n\nconst Plan1 = () => {\n  return (\n    <Post \n      mainTitle=\"9월 계획\"\n      tag=\"Plan\"\n      date=\"23.08.31\"\n      subTitle=\"9월의 계획\"\n    >\n      <StaticImage src=\"../../../assets/imgs/review/1/1.png\" alt=\"post-img\" \n        style={{ width: '100%', height: '60vh', backgroundSize: 'contain', backgroundRepeat: 'no-repeat' }} />\n      <R.PostContentBox>\n        <h2>난 원래 J였다,,</h2>\n        <p>그동안 회사를 다니고, 사회에 찌들어 가면서, 점점 TP가 되어 가는 걸 느꼈지만,</p>\n        <p>사실 난 J라고,,!!</p>\n        <p>그런 의미에서 새로운 9월을 준비하는 계획을 세울 것이다</p>\n        <p>일단 사촌 형 결혼식 갔다가, 9월 6일 부터,,,</p>\n\n        <h2>계획</h2>\n        <h3>GitHubPages 전체 리팩토링</h3>\n        <p>React와 Gatsby를 이용하여, 나만의 개발 블로그 만들기</p>\n        <p>일단 왜 Gatsby인 지 조사하기</p>\n        <p>다른 더 좋은 거 있으면 넘어가거나, 아니면 진짜 vanillaJS 이용할 수도,,,</p>\n\n        <h3>1일 1백준</h3>\n        <p>문제 풀고, 해설 블로그에 올리기</p>\n\n        <h3>내년 여름 준비</h3>\n        <p>주 5, 6일 운동</p>\n        <p>유산소 주에 2번은 넣기,,,,?</p>\n        <p>(하기 싫은데,,,)</p>\n        <p>식단까진,,, 아직까진,,,</p>\n\n        <h3>SOPT 지원</h3>\n        <p>간지나게 붙어버리기</p>\n\n        <h3>그 외 다른 활동 지원해 보기</h3>\n\n        <h3>JS, TS 끝장내기</h3>\n        <p>딱 대,,,</p>\n\n        <h3>영어 회화 공부</h3>\n        <p>미국 여행을 위한, 나의 미래를 위한 영어 회화 공부 하루 30분이라도</p>\n        <p>미국 여행 비자 받기</p>\n\n        <h3>바탕화면 및 핸드폰 갤러리 정리</h3>\n        <R.PostImgBox>\n          <StaticImage src=\"../../../../assets/imgs/plan/1/1.png\" alt=\"sopt-apply-complete\" />\n          <p>파일들이 너무 많아,,</p>\n        </R.PostImgBox>\n        <p>인턴하면서 생긴 파일들 다 정리</p>\n        <p>바빠서 정리 못한 사진 오백구천억개 정리</p>\n\n        <h3>집안일 시작</h3>\n        <p>커튼 빨기</p>\n\n        <h2>할 수 있음</h2>\n        <p>9월도 화이팅!🔥</p>\n      </R.PostContentBox>\n    </Post>\n  );\n};\n\nexport const Head = () => <title>plan - 9월 계획</title>;\n\nexport default Plan1;","import styled from 'styled-components';\nimport * as R from '../ReusableCSS';\n\nconst PostArticle = styled.article`\n  max-width: 120rem;\n  margin: 8rem auto 0 ;\n  padding: 13.2rem 10rem 7rem; \n\n  pre {\n    display: inline-block;\n    overflow: auto;\n    margin: 2rem 0;\n    padding: .1rem 2rem;\n    border-radius: 1rem;\n    font-size: 1.2rem;\n    color: #fff;\n    background-color: #222;\n    border: .1rem solid #666;\n\n    &::-webkit-scrollbar {\n      display: none; /* Chrome, Safari, Opera*/\n    }\n  }\n`;\n\nconst PostMainTitleBox = styled.div`\n  margin-bottom: 2rem;\n`;\n\nconst PostSubTitle = styled(R.SubTitle)`\n  padding: 2rem 0;\n  font-weight: 500;\n  border-bottom: .1rem solid #ddd;\n`;\n\nexport {\n  PostArticle,\n  PostMainTitleBox,\n  PostSubTitle\n};","import React, { Children, PropsWithChildren } from 'react';\nimport GlobalCSS from '@layouts/GlobalCSS';\nimport MainNav from '@layouts/MainNav';\nimport * as S from './style';\nimport * as R from '../ReusableCSS';\n\ninterface IPostProps { \n  mainTitle: string;\n  tag: string;\n  date: string;\n  subTitle: string;\n}\n\n/** Post 상세 페이지 template */\nconst Post = ({ mainTitle, tag, date, subTitle, children }: PropsWithChildren<IPostProps>) => {\n  const childrenArray = Children.toArray(children);\n\n  return (\n    <GlobalCSS>\n      <MainNav isSticky={true} />\n      <S.PostArticle>\n        <div>\n          <S.PostMainTitleBox>\n            <R.MainTitle>{mainTitle}</R.MainTitle>\n            <p>@{tag} / {date}</p>\n          </S.PostMainTitleBox>\n          {childrenArray[0]}\n          <S.PostSubTitle>{subTitle}</S.PostSubTitle>\n        </div>\n        {childrenArray[1]}\n      </S.PostArticle>\n    </GlobalCSS>\n  );\n};\n\nexport default Post;"],"names":["Head","React","Plan1","Post","mainTitle","tag","date","subTitle","StaticImage","src","alt","style","width","height","backgroundSize","backgroundRepeat","__error","R","__imageData","require","PostArticle","styled","article","withConfig","displayName","componentId","PostMainTitleBox","div","PostSubTitle","_ref","children","childrenArray","Children","toArray","GlobalCSS","MainNav","isSticky","S"],"sourceRoot":""}