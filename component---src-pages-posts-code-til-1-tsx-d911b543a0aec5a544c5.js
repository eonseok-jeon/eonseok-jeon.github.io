"use strict";(self.webpackChunkeonseok_github_pages=self.webpackChunkeonseok_github_pages||[]).push([[819],{1897:function(e,r,n){n.r(r),n.d(r,{Head:function(){return c}});var s=n(7294),t=n(8032),l=n(8630),a=n(926);const c=()=>s.createElement("title",null,"til - 초기 세팅");r.default=()=>s.createElement(l.Z,{mainTitle:"초기 세팅",tag:"TIL",date:"23.08.11",subTitle:"프로젝트 초기 세팅 하기"},s.createElement(t.S,{src:"../../../../assets/imgs/review/1.png",alt:"post-img",style:{width:"100%",height:"60vh",backgroundSize:"contain",backgroundRepeat:"no-repeat"},__error:'No data found for image "../../../../assets/imgs/review/1.png"\n              undefinedCould not read image data file "/Users/user/Desktop/GitHubPages/.cache/caches/gatsby-plugin-image/1957629390.json". \nThis may mean that the images in "/Users/user/Desktop/GitHubPages/src/pages/posts/code/til/1.tsx" were not processed.\nPlease ensure that your gatsby version is at least 2.24.78.'}),s.createElement(a.Rw,null,s.createElement("h2",null,"해야할 것"),s.createElement("h3",null,"1. 불필요한 파일들 삭제"),s.createElement("p",null,"모든 파일들 다 분석한 뒤, 현재 프로젝트에 필요 없는 파일들 삭제"),s.createElement("h3",null,"2. 불필요한 코드들 삭제 및 수정"),s.createElement("p",null,"import 되어있는 css와 icon, 초기 코드 등 삭제"),s.createElement("p",null,"head 메타 정보 수정"),s.createElement("p",null,"favicon 수정"),s.createElement("p",null,"package.json name, description, author 등 정보 수정"),s.createElement("p",null,"(bulid 코드 추가)"),s.createElement("h3",null,"3. css 초기화 및 gloabal css 적용"),s.createElement("p",null,"reset, global, variables…"),s.createElement("p",null,"scss 경우, preprocessorOptions 적용"),s.createElement("pre",null,s.createElement("code",null,"\ncss: {\n  preprocessorOptions: {\n    scss: {\n      additionalData: ₩\n          @use 'sass:math';\n          @import \"./src/renderer/src/styles/_global\";\n          ₩;\n    }\n  }\n}\n            ")),s.createElement("h3",null,"4. path 설정"),s.createElement("p",null,"path와 alias 설정"),s.createElement("pre",null,s.createElement("code",null,'\n{\n  "extends": "@electron-toolkit/tsconfig/tsconfig.web.json",\n  "include": [\n    "src/renderer/src/env.d.ts",\n    "src/renderer/src/**/*",\n    "src/renderer/src/**/*.tsx",\n    "src/preload/*.d.ts"\n  ],\n  "compilerOptions": {\n    "composite": true,\n    "jsx": "react-jsx",\n    "baseUrl": ".",\n    "paths": {\n      "renderer/*": ["src/renderer/src/*"],\n      "styles/*": ["src/renderer/src/styles/*"],\n      "@Types/*": ["src/renderer/src/@Types/*"],\n      "apis/*": ["src/renderer/src/apis/*"],\n      "assets/*": ["src/renderer/src/assets/*"],\n      "components/*": ["src/renderer/src/components/*"],\n      "layouts/*": ["src/renderer/src/layouts/*"],\n      "pages/*": ["src/renderer/src/pages/*"],\n      "routes/*": ["src/renderer/src/routes/*"],\n      "store/*": ["src/renderer/src/store/*"]\n    }\n  }\n}\n          ')),s.createElement("pre",null,s.createElement("code",null,'\nimport { resolve } from "path";\nimport { defineConfig, externalizeDepsPlugin } from "electron-vite";\nimport react from "@vitejs/plugin-react";\n\nexport default defineConfig({\n  main: {\n    plugins: [externalizeDepsPlugin()],\n  },\n  preload: {\n    plugins: [externalizeDepsPlugin()],\n  },\n  renderer: {\n    resolve: {\n      alias: {\n        renderer: resolve("src/renderer/src"),\n        assets: resolve("src/renderer/src/assets"),\n        components: resolve("src/renderer/src/components"),\n        styles: resolve("src/renderer/src/styles"),\n        contexts: resolve("src/renderer/src/contexts"),\n        hooks: resolve("src/renderer/src/hooks"),\n        layouts: resolve("src/renderer/src/layouts"),\n        pages: resolve("src/renderer/src/pages"),\n        routes: resolve("src/renderer/src/routes"),\n        store: resolve("src/renderer/src/store"),\n        utils: resolve("src/renderer/src/utils"),\n      },\n    },\n    plugins: [react()],\n    define: {\n      "process.env": process.env,\n    },\n    css: {\n      preprocessorOptions: {\n        scss: {\n          additionalData: ₩\n          @use \'sass:math\';\n          @import "./src/renderer/src/styles/_global";\n          ₩,\n        },\n      },\n    },\n  },\n});\n          ')),s.createElement("h3",null,"5. 코드 공통 규칙 설정"),s.createElement("p",null,".editorconfig 설정"),s.createElement("p",null,".eslintrc.json 설정"),s.createElement("p",null,".stylelintrc.json 설정"),s.createElement("p",null,".prettierrc 설정"),s.createElement("h3",null,"6. .gitignore 설정"),s.createElement("p",null,".gitignore"),s.createElement("h3",null,"7. 별 오류 없길 빌기"),s.createElement("p",null,"제발,, 🙏")))},8630:function(e,r,n){n.d(r,{Z:function(){return u}});var s=n(7294),t=n(6402),l=n(3344),a=n(5086),c=n(926);const o=a.default.article.withConfig({displayName:"style__PostArticle",componentId:"sc-rv28xx-0"})(["max-width:120rem;margin:8rem auto 0;padding:7%;&::-webkit-scrollbar{display:visible;}pre{display:inline-block;width:100%;overflow:auto;margin:2rem 0;padding:0.1rem 2rem;border-radius:1rem;font-size:1.2rem;color:#fff;background-color:#222;border:0.1rem solid #666;}"]),i=a.default.div.withConfig({displayName:"style__PostMainTitleBox",componentId:"sc-rv28xx-1"})(["margin-bottom:2rem;"]),d=(0,a.default)(c.DK).withConfig({displayName:"style__PostSubTitle",componentId:"sc-rv28xx-2"})(["padding:2rem 0;font-weight:500;border-bottom:0.1rem solid #ddd;"]);var u=e=>{let{mainTitle:r,tag:n,date:a,subTitle:u,children:p}=e;const m=s.Children.toArray(p);return s.createElement(t.Z,null,s.createElement(l.Z,{isSticky:!0}),s.createElement(o,null,s.createElement("div",null,s.createElement(i,null,s.createElement(c.U3,null,r),s.createElement("p",null,"@",n," / ",a)),m[0],s.createElement(d,null,u)),m[1]))}}}]);
//# sourceMappingURL=component---src-pages-posts-code-til-1-tsx-d911b543a0aec5a544c5.js.map